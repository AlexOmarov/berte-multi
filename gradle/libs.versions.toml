[metadata]
format.version = "1.1"

[versions]
# Kotlin
kotlin = "1.9.23"

# CI
detekt = "1.23.5"
kover = "0.7.6"
sonarqube = "4.4.1.3373"

# Tests
junit = "5.10.2"
mockito = "5.1.0"
awaitility = "4.2.1"
testcontainers = "1.19.7"
testcontainers-redis = "2.2.0"

# Android
agp = "8.3.1"
androidx-activityCompose = "1.8.2"
compose = "1.6.3"
compose-plugin = "1.6.1"

android-compileSdk = "34"
android-minSdk = "24"
android-targetSdk = "34"

# Server
ktor = "2.3.8"
logback = "1.4.14"


[libraries]
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }

logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }

compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }

ktor-server-core = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty-jvm", version.ref = "ktor" }
ktor-server-websockets = { module = "io.ktor:ktor-server-websockets-jvm", version.ref = "ktor" }
ktor-server-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json-jvm", version.ref = "ktor" }
ktor-server-micrometer = { module = "io.ktor:ktor-server-metrics-micrometer-jvm", version.ref = "ktor" }
ktor-server-metrics = { module = "io.ktor:ktor-server-metrics-jvm", version.ref = "ktor" }
ktor-server-logging = { module = "io.ktor:ktor-server-call-logging-jvm", version.ref = "ktor" }
ktor-server-tracing = { module = "io.ktor:ktor-server-call-id-jvm", version.ref = "ktor" }
ktor-server-swagger = { module = "io.ktor:ktor-server-swagger-jvm", version.ref = "ktor" }
ktor-server-openapi = { module = "io.ktor:ktor-server-openapi", version.ref = "ktor" }
ktor-server-config = { module = "io.ktor:ktor-server-config-yaml", version.ref = "ktor" }

ktor-server-tests = { module = "io.ktor:ktor-server-tests-jvm", version.ref = "ktor" }

detekt-ktlint = { group = "io.gitlab.arturbosch.detekt", name = "detekt-formatting", version.ref = "detekt" }

awaitility = { group = "org.awaitility", name = "awaitility-kotlin", version.ref = "awaitility" }
mockito = { group = "org.mockito.kotlin", name = "mockito-kotlin", version.ref = "mockito" }
kotlin-test = { group = "org.jetbrains.kotlin", name = "kotlin-test", version.ref = "kotlin" }

kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
junit-api = { group = "org.junit.jupiter", name = "junit-jupiter-api", version.ref = "junit" }
junit-engine = { group = "org.junit.jupiter", name = "junit-jupiter-engine", version.ref = "junit" }

testcontainers-junit = { group = "org.testcontainers", name = "junit-jupiter", version.ref = "testcontainers" }
testcontainers-kafka = { group = "org.testcontainers", name = "kafka", version.ref = "testcontainers" }
testcontainers-postgres = { group = "org.testcontainers", name = "postgresql", version.ref = "testcontainers" }
testcontainers-redis = { group = "com.redis", name = "testcontainers-redis", version.ref = "testcontainers-redis" }

[bundles]
ktor-server = [
    "ktor-server-core",
    "ktor-server-netty",
    "ktor-server-websockets",
    "ktor-server-serialization",
    "ktor-server-micrometer",
    "ktor-server-metrics",
    "ktor-server-logging",
    "ktor-server-tracing",
    "ktor-server-swagger",
    "ktor-server-openapi",
    "ktor-server-config"
]

test = [
    "testcontainers-junit",
    "testcontainers-kafka",
    "testcontainers-postgres",
    "mockito",
    "awaitility",
    "testcontainers-redis"
]

[plugins]
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }

detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }
sonarqube = { id = "org.sonarqube", version.ref = "sonarqube" }

androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }

jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }

ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
